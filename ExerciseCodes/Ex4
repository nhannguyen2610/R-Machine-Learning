# Load data
queue.dt = read.table('E4QUEUE.txt', sep = '\t', header = TRUE, na.strings = 'M')

# check and prepare proper dataset
attach(queue.dt)
head(queue.dt); tail(queue.dt)
any(is.na(dt)) # to check NA in dataset

# 2A: Calculate medians, median absolute deviations of the queuing times separately,
# and plot the histograms of the data sets.
summary(queue.dt)
median(QUEUEB, na.rm = TRUE) # if using normal func, rmb to use 'na.rm = T'
c(mad(QUEUEA, na.rm = TRUE), mad(QUEUEB, na.rm = TRUE))

#Histogram of datasets
hist(QUEUEA, main = 'Queue A') #plot queue A
hist(QUEUEB, main = 'Queue B') #plot queue B

#90% bootstrap CI for the medians
require('boot') 
median.func = function(dat, idx) median(dat[idx], na.rm = TRUE)

# bootstrap queue A
boot.a = boot(QUEUEA, median.func, R=1000, sim ="ordinary")
boot.a
plot(boot.a)
boot.ci(boot.a, conf = 0.9)

# bootstrap queue B
boot.b = boot(QUEUEB, median.func, R=1000, sim="ordinary")
boot.b
plot(boot.b)
boot.ci(boot.b, conf = 0.9)

# 2B: Apply the two sample Wilcoxon rank test to test the equality of
# the queuing times of the waiting lines 1 and 2.
# (Use two tailed alternative hypothesis.)
wilcox.test(QUEUEA, QUEUEB, alternative = 'two.sided', conf.int = TRUE, conf.level = 0.95)

#3A: 
salary.dt = read.table('E4SALARY.txt', sep = '\t', header = TRUE, na.strings = 'M')
attach(salary.dt)
head(salary.dt); tail(salary.dt)

#cal medians, mad, min  max of the salaries separately
summary(salary.dt)
c(mad(FEMALE, na.rm = TRUE), mad(MALE, na.rm = TRUE))

# Draw a scatter plot of the (paired) salary data
plot(FEMALE, MALE, main ='scatter plot', xlab ='Female', ylab ='Male', asp = 1)

# add the line y = x into the scatter plot.
abline(0,1, col = 'red') #intercept 0, slope 1

# Paired sign test  to test the equality 
# of the salaries of men and women (two-tailed)
require('BSDA')
SIGN.test(FEMALE, MALE, alternative = 'two.sided') 

# The paired Wilcoxon signed rank test to test the equality 
# of the salaries of men and women (two-tailed)
wilcox.test(FEMALE, MALE, alternative = 'two.sided', paired = TRUE) 

